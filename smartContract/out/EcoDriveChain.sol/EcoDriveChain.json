{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToBottleQuantity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToUser",
      "outputs": [
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "password",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "usdcWalletAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "uSDCWalletAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "petBottleQty",
          "type": "uint256"
        }
      ],
      "name": "depositPetBottle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeRateInUSDC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receiptTokens",
      "outputs": [
        {
          "internalType": "contract rEDCToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokensToRedeem",
          "type": "uint256"
        }
      ],
      "name": "redeemReceiptTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052633b9aca0060085534801561001857600080fd5b50600380546001600160a01b031916339081179091556001600955600854604051610042906100e6565b6001600160a01b039092168252608060208301819052600b908301526a526563656970742045444360a81b60a083015260c060408301819052600490830152637244454360e01b60e0830152606082015261010001604051809103906000f0801580156100b3573d6000803e3d6000fd5b5033600090815260076020526040902080546001600160a01b0319166001600160a01b03929092169190911790556100f3565b610ef0806107db83390190565b6106d9806101026000396000f3fe6080604052600436106100555760003560e01c8063775ab0831461005a57806378c4eb8b1461008357806392ecd541146100b0578063c01d4283146100c5578063d6d4e9ed146100e5578063edf5388614610133575b600080fd5b34801561006657600080fd5b5061007060095481565b6040519081526020015b60405180910390f35b34801561008f57600080fd5b5061007061009e366004610523565b60066020526000908152604090205481565b6100c36100be366004610547565b610162565b005b3480156100d157600080fd5b506100c36100e0366004610560565b610310565b3480156100f157600080fd5b5061011b610100366004610523565b6007602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b34801561013f57600080fd5b5061015361014e366004610523565b6103d0565b60405161007a939291906105d2565b600081116101d35760405162461bcd60e51b815260206004820152603360248201527f2050657420426f74746c652051747920546f2052656465656d206d7573742062604482015272652067726561746572207468616e207a65726f60681b60648201526084015b60405180910390fd5b336000908152600660205260409020548111156102325760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e73546f52656465656d000000000060448201526064016101ca565b6000600954826102429190610626565b3360008181526007602052604090819020549051633477cc1b60e21b81526004810192909252602482018590529192506001600160a01b039091169063d1df306c90604401600060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505033600090815260066020526040812080548694509092506102d9908490610643565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561030b573d6000803e3d6000fd5b505050565b33600090815260056020908152604080832060020180546001600160a01b0319166001600160a01b038716179055600690915281208054839290610355908490610656565b90915550503360008181526007602052604090819020549051630f38ca0d60e31b81526004810192909252602482018390526001600160a01b0316906379c6506890604401600060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050505050565b6005602052600090815260409020805481906103eb90610669565b80601f016020809104026020016040519081016040528092919081815260200182805461041790610669565b80156104645780601f1061043957610100808354040283529160200191610464565b820191906000526020600020905b81548152906001019060200180831161044757829003601f168201915b50505050509080600101805461047990610669565b80601f01602080910402602001604051908101604052809291908181526020018280546104a590610669565b80156104f25780601f106104c7576101008083540402835291602001916104f2565b820191906000526020600020905b8154815290600101906020018083116104d557829003601f168201915b505050600290930154919250506001600160a01b031683565b6001600160a01b038116811461052057600080fd5b50565b60006020828403121561053557600080fd5b81356105408161050b565b9392505050565b60006020828403121561055957600080fd5b5035919050565b6000806040838503121561057357600080fd5b823561057e8161050b565b946020939093013593505050565b6000815180845260005b818110156105b257602081850181015186830182015201610596565b506000602082860101526020601f19601f83011685010191505092915050565b6060815260006105e5606083018661058c565b82810360208401526105f7818661058c565b91505060018060a01b0383166040830152949350505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761063d5761063d610610565b92915050565b8181038181111561063d5761063d610610565b8082018082111561063d5761063d610610565b600181811c9082168061067d57607f821691505b60208210810361069d57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220adc8d8e5f27d4374f996e39a84ecd506c0dec89c16bf8c65cdc30d4c258e4b3064736f6c6343000813003360806040523480156200001157600080fd5b5060405162000ef038038062000ef08339810160408190526200003491620001a3565b82826003620000448382620002c4565b506004620000538282620002c4565b5050506001600160a01b038416620000a45760405162461bcd60e51b815260206004820152601060248201526f77726f6e6720756e6465726c79696e6760801b604482015260640160405180910390fd5b60058054336001600160a01b031991821617909155600680549091166001600160a01b039590951694909417909355505060075562000390565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200010657600080fd5b81516001600160401b0380821115620001235762000123620000de565b604051601f8301601f19908116603f011681019082821181831017156200014e576200014e620000de565b816040528381526020925086838588010111156200016b57600080fd5b600091505b838210156200018f578582018301518183018401529082019062000170565b600093810190920192909252949350505050565b60008060008060808587031215620001ba57600080fd5b84516001600160a01b0381168114620001d257600080fd5b60208601519094506001600160401b0380821115620001f057600080fd5b620001fe88838901620000f4565b945060408701519150808211156200021557600080fd5b506200022487828801620000f4565b606096909601519497939650505050565b600181811c908216806200024a57607f821691505b6020821081036200026b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002bf57600081815260208120601f850160051c810160208610156200029a5750805b601f850160051c820191505b81811015620002bb57828155600101620002a6565b5050505b505050565b81516001600160401b03811115620002e057620002e0620000de565b620002f881620002f1845462000235565b8462000271565b602080601f831160018114620003305760008415620003175750858301515b600019600386901b1c1916600185901b178555620002bb565b600085815260208120601f198616915b82811015620003615788860151825594840194600190910190840162000340565b5085821015620003805787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b5080620003a06000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101e8578063a9059cbb146101fb578063d1df306c1461020e578063dd62ed3e1461022157600080fd5b806370a08231146101a257806379c65068146101cb57806395d89b41146101e057600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806339509351146101645780633fab693f1461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610234565b604051610104919061099a565b60405180910390f35b61012061011b366004610a04565b6102c6565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610a2e565b6102e0565b60405160128152602001610104565b610120610172366004610a04565b610304565b60065461018a906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6101346101b0366004610a6a565b6001600160a01b031660009081526020819052604090205490565b6101de6101d9366004610a04565b610326565b005b6100f76103a1565b6101206101f6366004610a04565b6103b0565b610120610209366004610a04565b61042b565b6101de61021c366004610a04565b610439565b61013461022f366004610a8c565b610443565b60606003805461024390610abf565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610abf565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b5050505050905090565b6000336102d481858561046e565b60019150505b92915050565b6000336102ee858285610593565b6102f985858561060d565b506001949350505050565b6000336102d48185856103178383610443565b6103219190610af9565b61046e565b6005546001600160a01b031633146103935760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865204f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b60648201526084015b60405180910390fd5b61039d82826107b1565b5050565b60606004805461024390610abf565b600033816103be8286610443565b90508381101561041e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161038a565b6102f9828686840361046e565b6000336102d481858561060d565b61039d8282610870565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104d05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161038a565b6001600160a01b0382166105315760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161038a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061059f8484610443565b9050600019811461060757818110156105fa5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161038a565b610607848484840361046e565b50505050565b6001600160a01b0383166106715760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161038a565b6001600160a01b0382166106d35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161038a565b6001600160a01b0383166000908152602081905260409020548181101561074b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161038a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610607565b6001600160a01b0382166108075760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161038a565b80600260008282546108199190610af9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166108d05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161038a565b6001600160a01b038216600090815260208190526040902054818110156109445760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161038a565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610586565b600060208083528351808285015260005b818110156109c7578581018301518582016040015282016109ab565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109ff57600080fd5b919050565b60008060408385031215610a1757600080fd5b610a20836109e8565b946020939093013593505050565b600080600060608486031215610a4357600080fd5b610a4c846109e8565b9250610a5a602085016109e8565b9150604084013590509250925092565b600060208284031215610a7c57600080fd5b610a85826109e8565b9392505050565b60008060408385031215610a9f57600080fd5b610aa8836109e8565b9150610ab6602084016109e8565b90509250929050565b600181811c90821680610ad357607f821691505b602082108103610af357634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102da57634e487b7160e01b600052601160045260246000fdfea26469706673582212200c05ba48e69e77e824f3b2d447e7c6c65ad5e9701d5a3a13a02daf0589a995db64736f6c63430008130033",
    "sourceMap": "332:1833:0:-:0;;;729:13;704:38;;789:274;;;;;;;;;-1:-1:-1;813:9:0;:22;;-1:-1:-1;;;;;;813:22:0;825:10;813:22;;;;;;;845:18;:22;1032:14;;934:122;;;;;:::i;:::-;-1:-1:-1;;;;;373:32:6;;;355:51;;442:3;437:2;422:18;;415:31;;;483:2;462:19;;;455:31;-1:-1:-1;;;393:3:6;502:19;;495:42;573:3;568:2;553:18;;546:31;;;614:1;593:19;;;586:30;-1:-1:-1;;;647:3:6;632:19;;625:35;-1:-1:-1;712:18:6;;705:34;692:3;677:19;934:122:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;920:10:0;906:25;;;;:13;:25;;;;;:150;;-1:-1:-1;;;;;;906:150:0;-1:-1:-1;;;;;906:150:0;;;;;;;;;;332:1833;;;;;;;;;;:::o;14:731:6:-;332:1833:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100555760003560e01c8063775ab0831461005a57806378c4eb8b1461008357806392ecd541146100b0578063c01d4283146100c5578063d6d4e9ed146100e5578063edf5388614610133575b600080fd5b34801561006657600080fd5b5061007060095481565b6040519081526020015b60405180910390f35b34801561008f57600080fd5b5061007061009e366004610523565b60066020526000908152604090205481565b6100c36100be366004610547565b610162565b005b3480156100d157600080fd5b506100c36100e0366004610560565b610310565b3480156100f157600080fd5b5061011b610100366004610523565b6007602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b34801561013f57600080fd5b5061015361014e366004610523565b6103d0565b60405161007a939291906105d2565b600081116101d35760405162461bcd60e51b815260206004820152603360248201527f2050657420426f74746c652051747920546f2052656465656d206d7573742062604482015272652067726561746572207468616e207a65726f60681b60648201526084015b60405180910390fd5b336000908152600660205260409020548111156102325760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420746f6b656e73546f52656465656d000000000060448201526064016101ca565b6000600954826102429190610626565b3360008181526007602052604090819020549051633477cc1b60e21b81526004810192909252602482018590529192506001600160a01b039091169063d1df306c90604401600060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505033600090815260066020526040812080548694509092506102d9908490610643565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561030b573d6000803e3d6000fd5b505050565b33600090815260056020908152604080832060020180546001600160a01b0319166001600160a01b038716179055600690915281208054839290610355908490610656565b90915550503360008181526007602052604090819020549051630f38ca0d60e31b81526004810192909252602482018390526001600160a01b0316906379c6506890604401600060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050505050565b6005602052600090815260409020805481906103eb90610669565b80601f016020809104026020016040519081016040528092919081815260200182805461041790610669565b80156104645780601f1061043957610100808354040283529160200191610464565b820191906000526020600020905b81548152906001019060200180831161044757829003601f168201915b50505050509080600101805461047990610669565b80601f01602080910402602001604051908101604052809291908181526020018280546104a590610669565b80156104f25780601f106104c7576101008083540402835291602001916104f2565b820191906000526020600020905b8154815290600101906020018083116104d557829003601f168201915b505050600290930154919250506001600160a01b031683565b6001600160a01b038116811461052057600080fd5b50565b60006020828403121561053557600080fd5b81356105408161050b565b9392505050565b60006020828403121561055957600080fd5b5035919050565b6000806040838503121561057357600080fd5b823561057e8161050b565b946020939093013593505050565b6000815180845260005b818110156105b257602081850181015186830182015201610596565b506000602082860101526020601f19601f83011685010191505092915050565b6060815260006105e5606083018661058c565b82810360208401526105f7818661058c565b91505060018060a01b0383166040830152949350505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761063d5761063d610610565b92915050565b8181038181111561063d5761063d610610565b8082018082111561063d5761063d610610565b600181811c9082168061067d57607f821691505b60208210810361069d57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220adc8d8e5f27d4374f996e39a84ecd506c0dec89c16bf8c65cdc30d4c258e4b3064736f6c63430008130033",
    "sourceMap": "332:1833:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:33;;;;;;;;;;;;;;;;;;;160:25:6;;;148:2;133:18;749:33:0;;;;;;;;586:55;;;;;;;;;;-1:-1:-1;586:55:0;;;;;:::i;:::-;;;;;;;;;;;;;;1431:732;;;;;;:::i;:::-;;:::i;:::-;;1069:356;;;;;;;;;;-1:-1:-1;1069:356:0;;;;;:::i;:::-;;:::i;647:50::-;;;;;;;;;;-1:-1:-1;647:50:0;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;647:50:0;;;;;;-1:-1:-1;;;;;1278:32:6;;;1260:51;;1248:2;1233:18;647:50:0;1097:220:6;535:45:0;;;;;;;;;;-1:-1:-1;535:45:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1431:732::-;1546:1;1529:14;:18;1508:116;;;;-1:-1:-1;;;1508:116:0;;2453:2:6;1508:116:0;;;2435:21:6;2492:2;2472:18;;;2465:30;2531:34;2511:18;;;2504:62;-1:-1:-1;;;2582:18:6;;;2575:49;2641:19;;1508:116:0;;;;;;;;;1679:10;1655:35;;;;:23;:35;;;;;;:53;-1:-1:-1;1655:53:0;1634:127;;;;-1:-1:-1;;;1634:127:0;;2873:2:6;1634:127:0;;;2855:21:6;2912:2;2892:18;;;2885:30;2951:29;2931:18;;;2924:57;2998:18;;1634:127:0;2671:351:6;1634:127:0;1771:15;1806:18;;1789:14;:35;;;;:::i;:::-;1848:10;1834:25;;;;:13;:25;;;;;;;;:63;;-1:-1:-1;;;1834:63:0;;;;;3506:51:6;;;;3573:18;;;3566:34;;;1771:53:0;;-1:-1:-1;;;;;;1834:25:0;;;;:35;;3479:18:6;;1834:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1931:10:0;1907:35;;;;:23;:35;;;;;:53;;1946:14;;-1:-1:-1;1907:35:0;;-1:-1:-1;1907:53:0;;1946:14;;1907:53;:::i;:::-;;;;-1:-1:-1;;1970:40:0;;1978:10;;1970:40;;;;;1999:10;;1970:40;;;;1999:10;1978;1970:40;;;;;;;;;;;;;;;;;;;;;1498:665;1431:732;:::o;1069:356::-;1240:10;1226:25;;;;:13;:25;;;;;;;;:43;;:60;;-1:-1:-1;;;;;;1226:60:0;-1:-1:-1;;;;;1226:60:0;;;;;1296:23;:35;;;;;:51;;1335:12;;1226:25;1296:51;;1335:12;;1296:51;:::i;:::-;;;;-1:-1:-1;;1371:10:0;1357:25;;;;:13;:25;;;;;;;;:61;;-1:-1:-1;;;1357:61:0;;;;;3506:51:6;;;;3573:18;;;3566:34;;;-1:-1:-1;;;;;1357:25:0;;:35;;3479:18:6;;1357:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:356;;:::o;535:45::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;535:45:0;;;;;;;-1:-1:-1;;;;;;;535:45:0;;:::o;196:131:6:-;-1:-1:-1;;;;;271:31:6;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:247::-;391:6;444:2;432:9;423:7;419:23;415:32;412:52;;;460:1;457;450:12;412:52;499:9;486:23;518:31;543:5;518:31;:::i;:::-;568:5;332:247;-1:-1:-1;;;332:247:6:o;584:180::-;643:6;696:2;684:9;675:7;671:23;667:32;664:52;;;712:1;709;702:12;664:52;-1:-1:-1;735:23:6;;584:180;-1:-1:-1;584:180:6:o;769:323::-;845:6;853;906:2;894:9;885:7;881:23;877:32;874:52;;;922:1;919;912:12;874:52;961:9;948:23;980:31;1005:5;980:31;:::i;:::-;1030:5;1082:2;1067:18;;;;1054:32;;-1:-1:-1;;;769:323:6:o;1322:423::-;1364:3;1402:5;1396:12;1429:6;1424:3;1417:19;1454:1;1464:162;1478:6;1475:1;1472:13;1464:162;;;1540:4;1596:13;;;1592:22;;1586:29;1568:11;;;1564:20;;1557:59;1493:12;1464:162;;;1468:3;1671:1;1664:4;1655:6;1650:3;1646:16;1642:27;1635:38;1734:4;1727:2;1723:7;1718:2;1710:6;1706:15;1702:29;1697:3;1693:39;1689:50;1682:57;;;1322:423;;;;:::o;1750:496::-;1991:2;1980:9;1973:21;1954:4;2017:45;2058:2;2047:9;2043:18;2035:6;2017:45;:::i;:::-;2110:9;2102:6;2098:22;2093:2;2082:9;2078:18;2071:50;2138:33;2164:6;2156;2138:33;:::i;:::-;2130:41;;;2236:1;2232;2227:3;2223:11;2219:19;2211:6;2207:32;2202:2;2191:9;2187:18;2180:60;1750:496;;;;;;:::o;3027:127::-;3088:10;3083:3;3079:20;3076:1;3069:31;3119:4;3116:1;3109:15;3143:4;3140:1;3133:15;3159:168;3232:9;;;3263;;3280:15;;;3274:22;;3260:37;3250:71;;3301:18;;:::i;:::-;3159:168;;;;:::o;3611:128::-;3678:9;;;3699:11;;;3696:37;;;3713:18;;:::i;3744:125::-;3809:9;;;3830:10;;;3827:36;;;3843:18;;:::i;3874:380::-;3953:1;3949:12;;;;3996;;;4017:61;;4071:4;4063:6;4059:17;4049:27;;4017:61;4124:2;4116:6;4113:14;4093:18;4090:38;4087:161;;4170:10;4165:3;4161:20;4158:1;4151:31;4205:4;4202:1;4195:15;4233:4;4230:1;4223:15;4087:161;;3874:380;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addressToBottleQuantity(address)": "78c4eb8b",
    "addressToUser(address)": "edf53886",
    "depositPetBottle(address,uint256)": "c01d4283",
    "exchangeRateInUSDC()": "775ab083",
    "receiptTokens(address)": "d6d4e9ed",
    "redeemReceiptTokens(uint256)": "92ecd541"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToBottleQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToUser\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"usdcWalletAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"uSDCWalletAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"petBottleQty\",\"type\":\"uint256\"}],\"name\":\"depositPetBottle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateInUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiptTokens\",\"outputs\":[{\"internalType\":\"contract rEDCToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensToRedeem\",\"type\":\"uint256\"}],\"name\":\"redeemReceiptTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Marcellus Ifeanyi\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Factory contract that deploys the rEDCToken and mints the Receipt Tokens to the user upon deposit of Pet Bottles to the Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Check the PRD.md for the requirements\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EcoDriveChain.sol\":\"EcoDriveChain\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/EcoDriveChain.sol\":{\"keccak256\":\"0x49106524e15e9a6e415e758804611ce4db49ed9e7e5f564d2285a6eb88e81f71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3bd45d0244eeaa4c0922aa2a51b92d11ba6c22c68df539e88742c9bcc8a7f2\",\"dweb:/ipfs/QmSeD7tYjrpVS484JH1x46bj9WW1BKk5jjSZgwVzpiK5Fw\"]},\"contracts/rEDCToken.sol\":{\"keccak256\":\"0x456c68dcc2d8769989689fc8f28f454d30f818f4d7d6f99dbe2f1dcc1a5940c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5263a97e540a61e3ddb24ea20bfcb4d1608c2425004c51ffc7f2f30bf013183d\",\"dweb:/ipfs/QmZLZnuN76vs36RYJvSekhBVPi9RxmP7QTGgdNKio3bcUb\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressToBottleQuantity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressToUser",
          "outputs": [
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            },
            {
              "internalType": "address payable",
              "name": "usdcWalletAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "uSDCWalletAddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "petBottleQty",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositPetBottle"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "exchangeRateInUSDC",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "receiptTokens",
          "outputs": [
            {
              "internalType": "contract rEDCToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokensToRedeem",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "redeemReceiptTokens"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/EcoDriveChain.sol": "EcoDriveChain"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/EcoDriveChain.sol": {
        "keccak256": "0x49106524e15e9a6e415e758804611ce4db49ed9e7e5f564d2285a6eb88e81f71",
        "urls": [
          "bzz-raw://ff3bd45d0244eeaa4c0922aa2a51b92d11ba6c22c68df539e88742c9bcc8a7f2",
          "dweb:/ipfs/QmSeD7tYjrpVS484JH1x46bj9WW1BKk5jjSZgwVzpiK5Fw"
        ],
        "license": "MIT"
      },
      "contracts/rEDCToken.sol": {
        "keccak256": "0x456c68dcc2d8769989689fc8f28f454d30f818f4d7d6f99dbe2f1dcc1a5940c0",
        "urls": [
          "bzz-raw://5263a97e540a61e3ddb24ea20bfcb4d1608c2425004c51ffc7f2f30bf013183d",
          "dweb:/ipfs/QmZLZnuN76vs36RYJvSekhBVPi9RxmP7QTGgdNKio3bcUb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/EcoDriveChain.sol",
    "id": 156,
    "exportedSymbols": {
      "EcoDriveChain": [
        155
      ],
      "rEDCToken": [
        248
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:2133:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "33:31:0",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "66:42:0",
        "nodes": [],
        "absolutePath": "contracts/rEDCToken.sol",
        "file": "./rEDCToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 156,
        "sourceUnit": 249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "rEDCToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 248,
              "src": "74:9:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 155,
        "nodeType": "ContractDefinition",
        "src": "332:1833:0",
        "nodes": [
          {
            "id": 11,
            "nodeType": "StructDefinition",
            "src": "361:109:0",
            "nodes": [],
            "canonicalName": "EcoDriveChain.User",
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "email",
                "nameLocation": "390:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "383:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "383:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "password",
                "nameLocation": "412:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "405:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "usdcWalletAddress",
                "nameLocation": "446:17:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "430:33:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "430:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "368:4:0",
            "scope": 155,
            "visibility": "public"
          },
          {
            "id": 14,
            "nodeType": "VariableDeclaration",
            "src": "475:9:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "user",
            "nameLocation": "480:4:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_User_$11_storage",
              "typeString": "struct EcoDriveChain.User"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "User",
                "nameLocations": [
                  "475:4:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11,
                "src": "475:4:0"
              },
              "referencedDeclaration": 11,
              "src": "475:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_User_$11_storage_ptr",
                "typeString": "struct EcoDriveChain.User"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 16,
            "nodeType": "VariableDeclaration",
            "src": "491:17:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "poolAdmin",
            "nameLocation": "499:9:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 19,
            "nodeType": "VariableDeclaration",
            "src": "514:15:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "524:5:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "514:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "514:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 24,
            "nodeType": "VariableDeclaration",
            "src": "535:45:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "edf53886",
            "mutability": "mutable",
            "name": "addressToUser",
            "nameLocation": "567:13:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$11_storage_$",
              "typeString": "mapping(address => struct EcoDriveChain.User)"
            },
            "typeName": {
              "id": 23,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "543:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "535:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$11_storage_$",
                "typeString": "mapping(address => struct EcoDriveChain.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "User",
                  "nameLocations": [
                    "554:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "554:4:0"
                },
                "referencedDeclaration": 11,
                "src": "554:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$11_storage_ptr",
                  "typeString": "struct EcoDriveChain.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "nodeType": "VariableDeclaration",
            "src": "586:55:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "78c4eb8b",
            "mutability": "mutable",
            "name": "addressToBottleQuantity",
            "nameLocation": "618:23:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 27,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "594:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "586:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "605:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 33,
            "nodeType": "VariableDeclaration",
            "src": "647:50:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d6d4e9ed",
            "mutability": "mutable",
            "name": "receiptTokens",
            "nameLocation": "684:13:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_rEDCToken_$248_$",
              "typeString": "mapping(address => contract rEDCToken)"
            },
            "typeName": {
              "id": 32,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "655:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "647:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_rEDCToken_$248_$",
                "typeString": "mapping(address => contract rEDCToken)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 31,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30,
                  "name": "rEDCToken",
                  "nameLocations": [
                    "666:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 248,
                  "src": "666:9:0"
                },
                "referencedDeclaration": 248,
                "src": "666:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_rEDCToken_$248",
                  "typeString": "contract rEDCToken"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 36,
            "nodeType": "VariableDeclaration",
            "src": "704:38:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "INITIAL_SUPPLY",
            "nameLocation": "712:14:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "704:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "315f3030305f3030305f303030",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "729:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1_000_000_000"
            },
            "visibility": "internal"
          },
          {
            "id": 38,
            "nodeType": "VariableDeclaration",
            "src": "749:33:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "775ab083",
            "mutability": "mutable",
            "name": "exchangeRateInUSDC",
            "nameLocation": "764:18:0",
            "scope": 155,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "749:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66,
            "nodeType": "FunctionDefinition",
            "src": "789:274:0",
            "nodes": [],
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "803:260:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "poolAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "813:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 42,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "825:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "829:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "825:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "813:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "813:22:0"
                },
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46,
                      "name": "exchangeRateInUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "845:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "866:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "845:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "845:22:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50,
                        "name": "receiptTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "906:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_rEDCToken_$248_$",
                          "typeString": "mapping(address => contract rEDCToken)"
                        }
                      },
                      "id": 53,
                      "indexExpression": {
                        "expression": {
                          "id": 51,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "920:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "924:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "920:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "906:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_rEDCToken_$248",
                        "typeString": "contract rEDCToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "961:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "965:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "961:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "5265636569707420454443",
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "985:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2e141bde7f99d38e4dc0bfe21e330a126ea6573fe86faec595bd4523b7329c86",
                            "typeString": "literal_string \"Receipt EDC\""
                          },
                          "value": "Receipt EDC"
                        },
                        {
                          "hexValue": "72444543",
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1012:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6dd2317bab19225b99aaaedafad495d234860d95dd37a6dabe6f915cc55e5df1",
                            "typeString": "literal_string \"rDEC\""
                          },
                          "value": "rDEC"
                        },
                        {
                          "id": 61,
                          "name": "INITIAL_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "1032:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2e141bde7f99d38e4dc0bfe21e330a126ea6573fe86faec595bd4523b7329c86",
                            "typeString": "literal_string \"Receipt EDC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6dd2317bab19225b99aaaedafad495d234860d95dd37a6dabe6f915cc55e5df1",
                            "typeString": "literal_string \"rDEC\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "934:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_contract$_rEDCToken_$248_$",
                          "typeString": "function (address,string memory,string memory,uint256) returns (contract rEDCToken)"
                        },
                        "typeName": {
                          "id": 55,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 54,
                            "name": "rEDCToken",
                            "nameLocations": [
                              "938:9:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 248,
                            "src": "938:9:0"
                          },
                          "referencedDeclaration": 248,
                          "src": "938:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_rEDCToken_$248",
                            "typeString": "contract rEDCToken"
                          }
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "934:122:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_rEDCToken_$248",
                        "typeString": "contract rEDCToken"
                      }
                    },
                    "src": "906:150:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_rEDCToken_$248",
                      "typeString": "contract rEDCToken"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "906:150:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:2:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:0"
            },
            "scope": 155,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99,
            "nodeType": "FunctionDefinition",
            "src": "1069:356:0",
            "nodes": [],
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "1177:248:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 73,
                          "name": "addressToUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1226:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$11_storage_$",
                            "typeString": "mapping(address => struct EcoDriveChain.User storage ref)"
                          }
                        },
                        "id": 76,
                        "indexExpression": {
                          "expression": {
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1240:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1244:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1240:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1226:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$11_storage",
                          "typeString": "struct EcoDriveChain.User storage ref"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1252:17:0",
                      "memberName": "usdcWalletAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1226:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78,
                      "name": "uSDCWalletAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1272:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1226:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:60:0"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 81,
                        "name": "addressToBottleQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1296:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 84,
                      "indexExpression": {
                        "expression": {
                          "id": 82,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1320:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1324:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1320:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1296:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 85,
                      "name": "petBottleQty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1335:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1296:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1393:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1397:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1393:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 95,
                        "name": "petBottleQty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1405:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 88,
                          "name": "receiptTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1357:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_rEDCToken_$248_$",
                            "typeString": "mapping(address => contract rEDCToken)"
                          }
                        },
                        "id": 91,
                        "indexExpression": {
                          "expression": {
                            "id": 89,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1371:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1375:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1371:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1357:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_rEDCToken_$248",
                          "typeString": "contract rEDCToken"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1383:9:0",
                      "memberName": "mintToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 234,
                      "src": "1357:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:61:0"
                }
              ]
            },
            "functionSelector": "c01d4283",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositPetBottle",
            "nameLocation": "1078:16:0",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "uSDCWalletAddr",
                  "nameLocation": "1120:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1104:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "petBottleQty",
                  "nameLocation": "1149:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1144:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1144:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:73:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1177:0:0"
            },
            "scope": 155,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 154,
            "nodeType": "FunctionDefinition",
            "src": "1431:732:0",
            "nodes": [],
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "1498:665:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 105,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "1529:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1546:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1529:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2050657420426f74746c652051747920546f2052656465656d206d7573742062652067726561746572207468616e207a65726f",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1561:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5ed6090be29b47259862a06fd556779e0c23ba57ba1b59aab932efe847bdcc0",
                          "typeString": "literal_string \" Pet Bottle Qty To Redeem must be greater than zero\""
                        },
                        "value": " Pet Bottle Qty To Redeem must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5ed6090be29b47259862a06fd556779e0c23ba57ba1b59aab932efe847bdcc0",
                          "typeString": "literal_string \" Pet Bottle Qty To Redeem must be greater than zero\""
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1508:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:116:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 112,
                            "name": "addressToBottleQuantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "1655:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 115,
                          "indexExpression": {
                            "expression": {
                              "id": 113,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1679:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1683:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1679:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1655:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 116,
                          "name": "tokensToRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "1694:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1655:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420746f6b656e73546f52656465656d",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1722:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c2819fd7e4e893c36c14cb1f1383529959041a4fe14d848a108cbcbecc6fedc",
                          "typeString": "literal_string \"Insufficient tokensToRedeem\""
                        },
                        "value": "Insufficient tokensToRedeem"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c2819fd7e4e893c36c14cb1f1383529959041a4fe14d848a108cbcbecc6fedc",
                          "typeString": "literal_string \"Insufficient tokensToRedeem\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1634:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:127:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:127:0"
                },
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "uSDCAmount",
                      "nameLocation": "1776:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "1771:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1771:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 123,
                      "name": "tokensToRedeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1789:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 124,
                      "name": "exchangeRateInUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1806:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1789:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1771:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1870:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1874:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1870:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 134,
                        "name": "tokensToRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1882:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 127,
                          "name": "receiptTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1834:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_rEDCToken_$248_$",
                            "typeString": "mapping(address => contract rEDCToken)"
                          }
                        },
                        "id": 130,
                        "indexExpression": {
                          "expression": {
                            "id": 128,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1848:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1852:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1848:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1834:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_rEDCToken_$248",
                          "typeString": "contract rEDCToken"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1860:9:0",
                      "memberName": "burnToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 247,
                      "src": "1834:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1834:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:63:0"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 137,
                        "name": "addressToBottleQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1907:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 140,
                      "indexExpression": {
                        "expression": {
                          "id": 138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1931:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1935:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1931:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1907:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 141,
                      "name": "tokensToRedeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1946:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1907:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 150,
                        "name": "uSDCAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1999:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 146,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1978:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1982:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1978:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1970:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 144,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1970:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1970:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1990:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1970:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:40:0"
                }
              ]
            },
            "functionSelector": "92ecd541",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemReceiptTokens",
            "nameLocation": "1440:19:0",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "tokensToRedeem",
                  "nameLocation": "1465:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1460:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1459:21:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1498:0:0"
            },
            "scope": 155,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EcoDriveChain",
        "contractDependencies": [
          248
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4,
          "nodeType": "StructuredDocumentation",
          "src": "110:220:0",
          "text": " @title Factory contract that deploys the rEDCToken and mints the Receipt Tokens to the user upon deposit of Pet Bottles to the Pool\n @author Marcellus Ifeanyi\n @notice Check the PRD.md for the requirements"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          155
        ],
        "name": "EcoDriveChain",
        "nameLocation": "341:13:0",
        "scope": 156,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}